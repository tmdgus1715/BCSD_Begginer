<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.repository.MembershipMapper">
    <insert id="registerMember" parameterType="org.example.domain.Membership">
        INSERT INTO membership
        (club, member, `role`, join_time)
        VALUES (#{club}, #{user}, #{role}, #{join_Time})
    </insert>
    <delete id="withdrawMember" parameterType="Integer">
        DELETE FROM membership
        WHERE id = #{membershipId};
    </delete>
    <select id="getMembership" parameterType="org.example.dto.parameterDto.MembershipParameterDto"
            resultType="org.example.domain.Membership">
        SELECT *
        FROM membership
        WHERE `member` = #{userId} AND club = #{clubId}
    </select>
    <select id="isMember" parameterType="org.example.dto.parameterDto.IsMemberParameterDto"
            resultType="org.example.domain.Membership">
        SELECT *
        FROM `membership`
        WHERE `club` = ANY(SELECT `club` FROM membership WHERE `member` = #{member} ) AND `member` = #{user}
    </select>
    <update id="handOverPresident" parameterType="org.example.dto.parameterDto.MembershipParameterDto">
        UPDATE membership
        SET role = 1
        WHERE `member` = #{userId} AND club = #{clubId}
    </update>
    <select id="findOldestMember" parameterType="Integer" resultType="Integer">
        SELECT id
        FROM membership
        WHERE join_time = (SELECT MIN(join_time) FROM club) AND club = #{clubId};
    </select>
    <delete id="deleteUserAllMembership" parameterType="Integer">
        DELETE FROM membership
        WHERE member = #{id};
    </delete>
</mapper>